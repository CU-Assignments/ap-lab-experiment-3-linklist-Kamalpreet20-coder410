//Remove duplicate from sorted list
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head) return nullptr; // If the list is empty, return NULL
        
        ListNode* current = head; // Start from the head
        
        while (current && current->next) { // Traverse the list
            if (current->val == current->next->val) {
                // Remove duplicate by skipping the next node
                ListNode* temp = current->next;
                current->next = current->next->next;
                delete temp; // Free memory
            } else {
                current = current->next; // Move to the next distinct element
            }
        }
        
        return head; // Return the modified linked list
    }
};
